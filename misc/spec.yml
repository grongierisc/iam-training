openapi: 3.0.0
info:
  title: InterSystems IRIS REST CRUD demo
  description: Demo of a simple rest API on IRIS
  version: "0.1"
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
security:
  - basicAuth: []
  - oAuth2: []
paths:
  /:
    get:
      description: " PersonsREST general information "
      summary: " Server Info "
      operationId: GetInfo
      x-ISC_CORS: true
      x-ISC_ServiceMethod: GetInfo
      responses:
        "200":
          description: (Expected Result)
          content:
            "*/*":
              schema:
                type: object
                properties:
                  version:
                    type: string
        default:
          description: (Unexpected Error)
  /persons/all:
    get:
      description: " Retreive all the records of Sample.Person "
      summary: " Get all records of Person class "
      operationId: GetAllPersons
      x-ISC_ServiceMethod: GetAllPersons
      responses:
        "200":
          description: (Expected Result)
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Person"
        default:
          description: (Unexpected Error)
  "/persons/{id}":
    get:
      description: " Return one record fo Sample.Person "
      summary: " GET method to return JSON for a given person id"
      operationId: GetPerson
      x-ISC_ServiceMethod: GetPerson
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: (Expected Result)
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Person"
        default:
          description: (Unexpected Error)
    put:
      description: " Update a record in Sample.Person with id "
      summary: " Update a person with id"
      operationId: UpdatePerson
      x-ISC_ServiceMethod: UpdatePerson
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/UpdatePersonPayloadbody"
      responses:
        "200":
          description: (Expected Result)
        default:
          description: (Unexpected Error)
    delete:
      description: " Delete a record with id in Sample.Person "
      summary: " Delete a person with id"
      operationId: DeletePerson
      x-ISC_ServiceMethod: DeletePerson
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: (Expected Result)
        default:
          description: (Unexpected Error)
  /persons/:
    post:
      description: " Creates a new Sample.Person record "
      summary: " Create a person"
      operationId: CreatePerson
      x-ISC_ServiceMethod: CreatePerson
      requestBody:
        $ref: "#/components/requestBodies/UpdatePersonPayloadbody"
      responses:
        "200":
          description: (Expected Result)
        default:
          description: (Unexpected Error)
servers:
  - url: https://localhost:8443/
components:
  requestBodies:
    UpdatePersonPayloadbody:
      content:
        application/json:
          schema:
            type: string
      description: Request body contents
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    oAuth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://localhost:8443/persons/oauth2/token
          scopes: {}
  schemas:
    Person:
      type: object
      properties:
        Name:
          type: string
        Title:
          type: string
        Company:
          type: string
        Phone:
          type: string
        DOB:
          type: string
          format: date-time
